@model CustomerIndexVM
@inject Microsoft.AspNetCore.Hosting.IWebHostEnvironment environment
@{
    var allCountries = Model.AllCountries;
}

@using (Html.BeginForm("GenerateDummyCustomers", "Customer"))
{

    <input type="submit" value="Generate Name from file" />
}

@using (Html.BeginForm("CleanUp", "Customer"))
{
    <input type="submit" value="Remove zombie customers" />
}

@{
    // I can write c# inside this code block and use the value in html
    var i = 10;
    var j = i * 10;
}


<h2>Example of Dependency Injection inside view @environment.ContentRootPath</h2>

<form asp-action="Index" method="get">
    <select name="country" onchange="this.form.submit()">
        <option >[All]</option>
        @foreach (string key in allCountries.Keys)
        {
            <option   selected="@(key == Model.SelectedCountry ? "selected" : "")" value="@key">@(allCountries[key])</option>
        }
    </select>
    <input type="submit"  value="Filter"/>
</form>
<table class="table">
    <thead>
        <tr>
            <th>FullName</th>
            <th>Email</th>
            <th>Number of Accounts</th>
            <th>Details</th>
            <th>Edit</th>
            <th>Remove</th>
        </tr>
    </thead>
    <tbody>
        @foreach (var customer in Model.CustomersPageList.Data)
        {
        <tr data-customerlink="@Url.ActionLink("Index", "Customer", new { selectedCustomerId = customer.Id })">
            <td><a href=""> @customer.FullName</a></td>
            <td>@customer.Email</td>
            <td>
                @customer.Accounts.Count
            </td>
            <td>
                <a href="@Url.ActionLink("Index", "Customer", new { selectedCustomerId = customer.Id })">Details</a>
            </td>

            <td>
                <a href="@Url.ActionLink("Edit", "Customer", new { id = customer.Id })">Edit</a>
            </td>
            <td>

                <a href="@Url.Action("Delete", "Customer", new { id = customer.Id })">Delete</a>
            </td>
        </tr>

        }
    </tbody>
</table>

@if (Model.SelectedCustomer != null)
{
    <h2>Selected Customer</h2>
    @await Html.PartialAsync("_CustomerDisplayName", Model.SelectedCustomer)
}



 

@section Scripts {

    <script>
        $(document).ready(function () {


            $("tr").click(function () {
                window.location = $(this).data("customerlink");
            });
        });
    </script>

}